--- a/net/minecraft/server/ContainerWorkbench.java
+++ b/net/minecraft/server/ContainerWorkbench.java
@@ -1,13 +1,21 @@
 package net.minecraft.server;
 
 import java.util.Optional;
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftInventoryCrafting;
+import org.bukkit.craftbukkit.inventory.CraftInventoryView;
+// CraftBukkit end
 
 public class ContainerWorkbench extends ContainerRecipeBook<InventoryCrafting> {
 
     private final InventoryCrafting craftInventory;
     private final InventoryCraftResult resultInventory;
-    private final ContainerAccess e;
+    public final ContainerAccess e;
     private final EntityHuman f;
+    // CraftBukkit start
+    private CraftInventoryView bukkitEntity = null;
+    private PlayerInventory player;
+    // CraftBukkit end
 
     public ContainerWorkbench(int i, PlayerInventory playerinventory) {
         this(i, playerinventory, ContainerAccess.a);
@@ -15,8 +23,12 @@
 
     public ContainerWorkbench(int i, PlayerInventory playerinventory, ContainerAccess containeraccess) {
         super(Containers.CRAFTING, i);
-        this.craftInventory = new InventoryCrafting(this, 3, 3);
+        // CraftBukkit start - Switched order of IInventory construction and stored player
         this.resultInventory = new InventoryCraftResult();
+        this.craftInventory = new InventoryCrafting(this, 3, 3, playerinventory.player); // CraftBukkit - pass player
+        this.craftInventory.resultInventory = this.resultInventory;
+        this.player = playerinventory;
+        // CraftBukkit end
         this.e = containeraccess;
         this.f = playerinventory.player;
         this.a((Slot) (new SlotResult(playerinventory.player, this.craftInventory, this.resultInventory, 0, 124, 35)));
@@ -42,7 +54,7 @@
 
     }
 
-    protected static void a(int i, World world, EntityHuman entityhuman, InventoryCrafting inventorycrafting, InventoryCraftResult inventorycraftresult) {
+    protected static void a(int i, World world, EntityHuman entityhuman, InventoryCrafting inventorycrafting, InventoryCraftResult inventorycraftresult, Container container) { // CraftBukkit
         if (!world.isClientSide) {
             EntityPlayer entityplayer = (EntityPlayer) entityhuman;
             ItemStack itemstack = ItemStack.a;
@@ -55,6 +67,7 @@
                     itemstack = recipecrafting.a(inventorycrafting);
                 }
             }
+            itemstack = org.bukkit.craftbukkit.event.CraftEventFactory.callPreCraftEvent(inventorycrafting, inventorycraftresult, itemstack, container.getBukkitView(), false); // CraftBukkit
 
             inventorycraftresult.setItem(0, itemstack);
             entityplayer.playerConnection.sendPacket(new PacketPlayOutSetSlot(i, 0, itemstack));
@@ -64,7 +77,7 @@
     @Override
     public void a(IInventory iinventory) {
         this.e.a((world, blockposition) -> {
-            a(this.windowId, world, this.f, this.craftInventory, this.resultInventory);
+            a(this.windowId, world, this.f, this.craftInventory, this.resultInventory, this); // CraftBukkit
         });
     }
 
@@ -94,6 +107,7 @@
 
     @Override
     public boolean canUse(EntityHuman entityhuman) {
+        if (!this.checkReachable) return true; // CraftBukkit
         return a(this.e, entityhuman, Blocks.CRAFTING_TABLE);
     }
 
@@ -166,4 +180,17 @@
     public int h() {
         return this.craftInventory.f();
     }
+
+    // CraftBukkit start
+    @Override
+    public CraftInventoryView getBukkitView() {
+        if (bukkitEntity != null) {
+            return bukkitEntity;
+        }
+
+        CraftInventoryCrafting inventory = new CraftInventoryCrafting(this.craftInventory, this.resultInventory);
+        bukkitEntity = new CraftInventoryView(this.player.player.getBukkitEntity(), inventory, this);
+        return bukkitEntity;
+    }
+    // CraftBukkit end
 }
