--- a/net/minecraft/server/EntityZombieVillager.java
+++ b/net/minecraft/server/EntityZombieVillager.java
@@ -3,6 +3,11 @@
 import com.mojang.datafixers.Dynamic;
 import java.util.UUID;
 import javax.annotation.Nullable;
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.ZombieVillager;
+import org.bukkit.event.entity.EntityTransformEvent;
+// CraftBukkit end
 
 public class EntityZombieVillager extends EntityZombie implements VillagerDataHolder {
 
@@ -13,6 +18,7 @@
     private NBTBase by;
     private NBTTagCompound bz;
     private int bA;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public EntityZombieVillager(EntityTypes<? extends EntityZombieVillager> entitytypes, World world) {
         super(entitytypes, world);
@@ -75,6 +81,11 @@
     public void tick() {
         if (!this.world.isClientSide && this.isAlive() && this.isConverting()) {
             int i = this.getConversionProgress();
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            this.lastTick = MinecraftServer.currentTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
 
             this.conversionTime -= i;
             if (this.conversionTime <= 0) {
@@ -123,8 +134,11 @@
         this.conversionPlayer = uuid;
         this.conversionTime = i;
         this.getDataWatcher().set(EntityZombieVillager.CONVERTING, true);
-        this.removeEffect(MobEffects.WEAKNESS);
-        this.addEffect(new MobEffect(MobEffects.INCREASE_DAMAGE, i, Math.min(this.world.getDifficulty().a() - 1, 0)));
+        // CraftBukkit start
+        this.persistent = true; // CraftBukkit - SPIGOT-4684 update persistence
+        this.removeEffect(MobEffects.WEAKNESS, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        this.addEffect(new MobEffect(MobEffects.INCREASE_DAMAGE, i, Math.min(this.world.getDifficulty().a() - 1, 0)), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        // CraftBukkit end
         this.world.broadcastEntityEffect(this, (byte) 16);
     }
 
@@ -166,7 +180,7 @@
             entityvillager.setAgeRaw(-24000);
         }
 
-        this.die();
+        // this.die(); // CraftBukkit - moved down
         entityvillager.setNoAI(this.isNoAI());
         if (this.hasCustomName()) {
             entityvillager.setCustomName(this.getCustomName());
@@ -178,7 +192,14 @@
         }
 
         entityvillager.setInvulnerable(this.isInvulnerable());
-        worldserver.addEntity(entityvillager);
+        // CraftBukkit start
+        if (CraftEventFactory.callEntityTransformEvent(this, entityvillager, EntityTransformEvent.TransformReason.CURED).isCancelled()) {
+            ((ZombieVillager) getBukkitEntity()).setConversionTime(-1); // SPIGOT-5208: End conversion to stop event spam
+            return;
+        }
+        this.die(); // CraftBukkit - from above
+        worldserver.addEntity(entityvillager, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CURED); // CraftBukkit - add SpawnReason
+        // CraftBukkit end
         if (this.conversionPlayer != null) {
             EntityHuman entityhuman = worldserver.b(this.conversionPlayer);
 
@@ -188,7 +209,7 @@
             }
         }
 
-        entityvillager.addEffect(new MobEffect(MobEffects.CONFUSION, 200, 0));
+        entityvillager.addEffect(new MobEffect(MobEffects.CONFUSION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION); // CraftBukkit
         worldserver.a((EntityHuman) null, 1027, new BlockPosition(this), 0);
     }
 
