--- a/net/minecraft/server/BlockFire.java
+++ b/net/minecraft/server/BlockFire.java
@@ -7,6 +7,15 @@
 import java.util.Map.Entry;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.block.CraftBlockState;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.BlockBurnEvent;
+import org.bukkit.event.block.BlockFadeEvent;
+import org.bukkit.event.block.BlockSpreadEvent;
+// CraftBukkit end
+
 public class BlockFire extends Block {
 
     public static final BlockStateInteger AGE = BlockProperties.ad;
@@ -33,7 +42,20 @@
 
     @Override
     public IBlockData updateState(IBlockData iblockdata, EnumDirection enumdirection, IBlockData iblockdata1, GeneratorAccess generatoraccess, BlockPosition blockposition, BlockPosition blockposition1) {
-        return this.canPlace(iblockdata, generatoraccess, blockposition) ? (IBlockData) this.a((IBlockAccess) generatoraccess, blockposition).set(BlockFire.AGE, iblockdata.get(BlockFire.AGE)) : Blocks.AIR.getBlockData();
+        // CraftBukkit start
+        if (!iblockdata.canPlace(generatoraccess, blockposition)) {
+            CraftBlockState blockState = CraftBlockState.getBlockState(generatoraccess, blockposition);
+            blockState.setData(Blocks.AIR.getBlockData());
+
+            BlockFadeEvent event = new BlockFadeEvent(blockState.getBlock(), blockState);
+            generatoraccess.getMinecraftWorld().getMinecraftServer().server.getPluginManager().callEvent(event);
+
+            if (!event.isCancelled()) {
+                return blockState.getHandle();
+            }
+        }
+        return this.a((IBlockAccess) generatoraccess, blockposition).set(BlockFire.AGE, iblockdata.get(BlockFire.AGE));
+        // CraftBukkit end
     }
 
     @Nullable
@@ -82,7 +104,7 @@
     public void tick(IBlockData iblockdata, World world, BlockPosition blockposition, Random random) {
         if (world.getGameRules().getBoolean(GameRules.DO_FIRE_TICK)) {
             if (!iblockdata.canPlace(world, blockposition)) {
-                world.a(blockposition, false);
+                fireExtinguished(world, blockposition); // CraftBukkit - invalid place location
             }
 
             Block block = world.getType(blockposition.down()).getBlock();
@@ -90,7 +112,7 @@
             int i = (Integer) iblockdata.get(BlockFire.AGE);
 
             if (!flag && world.isRaining() && this.a(world, blockposition) && random.nextFloat() < 0.2F + (float) i * 0.03F) {
-                world.a(blockposition, false);
+                fireExtinguished(world, blockposition); // CraftBukkit - extinguished by rain
             } else {
                 int j = Math.min(15, i + random.nextInt(3) / 2);
 
@@ -105,14 +127,14 @@
                         BlockPosition blockposition1 = blockposition.down();
 
                         if (!world.getType(blockposition1).d(world, blockposition1, EnumDirection.UP) || i > 3) {
-                            world.a(blockposition, false);
+                            fireExtinguished(world, blockposition); // CraftBukkit
                         }
 
                         return;
                     }
 
                     if (i == 15 && random.nextInt(4) == 0 && !this.j(world.getType(blockposition.down()))) {
-                        world.a(blockposition, false);
+                        fireExtinguished(world, blockposition); // CraftBukkit
                         return;
                     }
                 }
@@ -120,12 +142,14 @@
                 boolean flag1 = world.s(blockposition);
                 int k = flag1 ? -50 : 0;
 
-                this.a(world, blockposition.east(), 300 + k, random, i);
-                this.a(world, blockposition.west(), 300 + k, random, i);
-                this.a(world, blockposition.down(), 250 + k, random, i);
-                this.a(world, blockposition.up(), 250 + k, random, i);
-                this.a(world, blockposition.north(), 300 + k, random, i);
-                this.a(world, blockposition.south(), 300 + k, random, i);
+                // CraftBukkit start - add source blockposition to burn calls
+                this.a(world, blockposition.east(), 300 + k, random, i, blockposition);
+                this.a(world, blockposition.west(), 300 + k, random, i, blockposition);
+                this.a(world, blockposition.down(), 250 + k, random, i, blockposition);
+                this.a(world, blockposition.up(), 250 + k, random, i, blockposition);
+                this.a(world, blockposition.north(), 300 + k, random, i, blockposition);
+                this.a(world, blockposition.south(), 300 + k, random, i, blockposition);
+                // CraftBukkit end
                 BlockPosition.MutableBlockPosition blockposition_mutableblockposition = new BlockPosition.MutableBlockPosition();
 
                 for (int l = -1; l <= 1; ++l) {
@@ -151,7 +175,15 @@
                                     if (i2 > 0 && random.nextInt(k1) <= i2 && (!world.isRaining() || !this.a(world, (BlockPosition) blockposition_mutableblockposition))) {
                                         int j2 = Math.min(15, i + random.nextInt(5) / 4);
 
-                                        world.setTypeAndData(blockposition_mutableblockposition, (IBlockData) this.a((IBlockAccess) world, (BlockPosition) blockposition_mutableblockposition).set(BlockFire.AGE, j2), 3);
+                                        // CraftBukkit start - Call to stop spread of fire
+                                        if (world.getType(blockposition_mutableblockposition).getBlock() != Blocks.FIRE) {
+                                            if (CraftEventFactory.callBlockIgniteEvent(world, blockposition_mutableblockposition, blockposition).isCancelled()) {
+                                                continue;
+                                            }
+
+                                            CraftEventFactory.handleBlockSpreadEvent(world, blockposition, blockposition_mutableblockposition, (IBlockData) this.a((IBlockAccess) world, (BlockPosition) blockposition_mutableblockposition).set(BlockFire.AGE, j2), 3); // CraftBukkit
+                                        }
+                                        // CraftBukkit end
                                     }
                                 }
                             }
@@ -175,12 +207,24 @@
         return iblockdata.b((IBlockState) BlockProperties.C) && (Boolean) iblockdata.get(BlockProperties.C) ? 0 : this.flameChances.getInt(iblockdata.getBlock());
     }
 
-    private void a(World world, BlockPosition blockposition, int i, Random random, int j) {
+    private void a(World world, BlockPosition blockposition, int i, Random random, int j, BlockPosition sourceposition) { // CraftBukkit add sourceposition
         int k = this.q(world.getType(blockposition));
 
         if (random.nextInt(i) < k) {
             IBlockData iblockdata = world.getType(blockposition);
 
+            // CraftBukkit start
+            org.bukkit.block.Block theBlock = world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ());
+            org.bukkit.block.Block sourceBlock = world.getWorld().getBlockAt(sourceposition.getX(), sourceposition.getY(), sourceposition.getZ());
+
+            BlockBurnEvent event = new BlockBurnEvent(theBlock, sourceBlock);
+            world.getServer().getPluginManager().callEvent(event);
+
+            if (event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
+
             if (random.nextInt(j + 10) < 5 && !world.isRainingAt(blockposition)) {
                 int l = Math.min(j + random.nextInt(5) / 4, 15);
 
@@ -241,9 +285,10 @@
     @Override
     public void onPlace(IBlockData iblockdata, World world, BlockPosition blockposition, IBlockData iblockdata1, boolean flag) {
         if (iblockdata1.getBlock() != iblockdata.getBlock()) {
-            if (world.worldProvider.getDimensionManager() != DimensionManager.OVERWORLD && world.worldProvider.getDimensionManager() != DimensionManager.NETHER || !((BlockPortal) Blocks.NETHER_PORTAL).a((GeneratorAccess) world, blockposition)) {
+            // CraftBukkit - getType()
+            if (world.worldProvider.getDimensionManager().getType() != DimensionManager.OVERWORLD && world.worldProvider.getDimensionManager().getType() != DimensionManager.NETHER || !((BlockPortal) Blocks.NETHER_PORTAL).a((GeneratorAccess) world, blockposition)) {
                 if (!iblockdata.canPlace(world, blockposition)) {
-                    world.a(blockposition, false);
+                    fireExtinguished(world, blockposition); // CraftBukkit - fuel block broke
                 } else {
                     world.getBlockTickList().a(blockposition, this, this.a((IWorldReader) world) + world.random.nextInt(10));
                 }
@@ -395,4 +440,12 @@
         blockfire.a(Blocks.COMPOSTER, 5, 20);
         blockfire.a(Blocks.SWEET_BERRY_BUSH, 60, 100);
     }
+
+    // CraftBukkit start
+    private void fireExtinguished(GeneratorAccess world, BlockPosition position) {
+        if (!CraftEventFactory.callBlockFadeEvent(world, position, Blocks.AIR.getBlockData()).isCancelled()) {
+            world.a(position, false);
+        }
+    }
+    // CraftBukkit end
 }
